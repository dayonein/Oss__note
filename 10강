OSS 10강 파일비교 diff (2022-12-02)

## HEAD / HEADS
- `HEAD` / `HEAD~1`: 하나 전 커밋
- `HEADNN` / `HEAD^^`: 두 개 전 커밋 (`HEAD~^` 또는 `HEAD^~` 혼용 가능)

## 깃3 영역 파일 비교
- 오른쪽 영역이 기준, 왼쪽이 대상 파일
- 작업 디렉토리 (Working Directory)
- 스테이징 영역 (Staging Area)
- 깃(지역 저장소) (Git Local Repository)

## Git 명령어
- `add`: Staging Area에 파일 추가
- `Commit`: Staging Area에 있는 파일을 저장소에 저장
- `Is git diff`: 두 버전 간 파일 비교

## 파일 비교 명령어
- 작업 영역 내용 보기: `$ git diff HEAD`
- 스테이징 영역 파일 보기: `$ git diff --staged HEAD`
- 두 버전 간 파일 비교: `$ git diff HEAD~2 HEAD` (이전 파일 기준 2개 전 대상 파일)

## 결과 내용 표시
- 작업 영역 내용: `$ git diff HEAD`
  - 예: 작업 영역에 변경된 내용을 표시

- 스테이징 영역 파일 보기: `$ git diff --staged HEAD`
  - 예: 스테이징 영역에 있는 변경 내용 표시

- 두 버전 간 파일 비교: `$ git diff HEAD~2 HEAD`
  - 예: 이전 파일을 기준으로 2개 전 대상 파일의 변경 내용 표시

## 깃 저장소 내용
- A
- A, B, C, D
  - 결과 내용: A, +B, +C. (대상 파일은 세 줄이 추가)

## 두 버전끼리의 파일 비교
- `$ git diff HEAD~2 HEAD` (이전 파일 기준 2개 전 대상 파일)
  - A (HEAD ~2)
    - a
  - 결과: a, +b
- B (HEAD~)
    - a
- C (HEAD)
    - a, b, c
  - 결과: a, +b
